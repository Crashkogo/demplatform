const fs = require('fs');
const path = require('path');

console.log('üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...');

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
const sslDir = path.join(__dirname, 'ssl');
if (!fs.existsSync(sslDir)) {
    fs.mkdirSync(sslDir);
}

try {
    // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å selfsigned
    const selfsigned = require('selfsigned');

    const attrs = [
        { name: 'countryName', value: 'RU' },
        { name: 'stateOrProvinceName', value: 'Moscow' },
        { name: 'localityName', value: 'Moscow' },
        { name: 'organizationName', value: 'ConsultantPlus' },
        { name: 'organizationalUnitName', value: 'IT' },
        { name: 'commonName', value: 'localhost' }
    ];

    const options = {
        keySize: 2048,
        days: 365,
        algorithm: 'sha256',
        extensions: [
            {
                name: 'subjectAltName',
                altNames: [
                    { type: 2, value: 'localhost' },
                    { type: 2, value: '127.0.0.1' },
                    { type: 7, ip: '127.0.0.1' },
                    { type: 7, ip: '::1' }
                ]
            }
        ]
    };

    console.log('üìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç...');
    const pems = selfsigned.generate(attrs, options);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã
    const keyPath = path.join(sslDir, 'key.pem');
    const certPath = path.join(sslDir, 'cert.pem');

    fs.writeFileSync(keyPath, pems.private);
    fs.writeFileSync(certPath, pems.cert);

    console.log('‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìÅ –ü—É—Ç—å: ${sslDir}`);
    console.log(`üîë –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: ${keyPath}`);
    console.log(`üìú –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: ${certPath}`);
    console.log('');
    console.log('üîó –¢–µ–ø–µ—Ä—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ HTTPS://localhost:3000');
    console.log('‚ö†Ô∏è  –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏');
    console.log('   –ù–∞–∂–º–∏—Ç–µ "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ" ‚Üí "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ localhost (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ)"');
    console.log('');
    console.log('üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å HTTPS –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
    console.log('   npm run https');

} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:', error.message);
    console.log('');
    console.log('üí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã:');
    console.log('');
    console.log('1. mkcert (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):');
    console.log('   - –°–∫–∞—á–∞–π—Ç–µ: https://github.com/FiloSottile/mkcert/releases');
    console.log('   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ: mkcert -install');
    console.log('   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ: mkcert localhost 127.0.0.1 ::1');
    console.log('   - –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Ñ–∞–π–ª—ã –≤ cert.pem –∏ key.pem');
    console.log('');
    console.log('2. OpenSSL:');
    console.log('   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OpenSSL –¥–ª—è Windows');
    console.log('   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ HTTPS_SETUP.md');
    console.log('');
    console.log('3. –ì–æ—Ç–æ–≤—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:');
    console.log('   - –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É ssl/');
    console.log('   - –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ç—É–¥–∞ key.pem –∏ cert.pem');
} 