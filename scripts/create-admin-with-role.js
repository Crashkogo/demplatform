// scripts/create-admin-with-role.js
// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin —Å —Ä–æ–ª—å—é –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä

const { sequelize, User, Role } = require('../models');
const bcrypt = require('bcrypt');

async function createAdminWithRole() {
    try {
        console.log('\n========================================');
        console.log('üë§ –°–û–ó–î–ê–ù–ò–ï –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê');
        console.log('========================================\n');

        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        console.log('üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        await sequelize.authenticate();
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–æ–ª—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"...');
        let adminRole = await Role.findOne({ where: { name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' } });

        if (!adminRole) {
            console.log('üìù –†–æ–ª—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–Ω–∏–µ...');
            adminRole = await Role.create({
                name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                description: '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã',
                isAdmin: true,
                canViewMaterials: true,
                canDownloadMaterials: true,
                canCreateMaterials: true,
                canEditMaterials: true,
                canDeleteMaterials: true,
                canCreateCategories: true,
                canEditCategories: true,
                canDeleteCategories: true,
                canManageAllCategories: true,
                categoryAccessType: 'all',
                canViewUsers: true,
                canCreateUsers: true,
                canEditUsers: true,
                canDeleteUsers: true,
                canViewLogs: true,
                canManageRoles: true
            });
            console.log(`‚úÖ –†–æ–ª—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" —Å–æ–∑–¥–∞–Ω–∞ (ID: ${adminRole.id})\n`);
        } else {
            console.log(`‚úÖ –†–æ–ª—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –Ω–∞–π–¥–µ–Ω–∞ (ID: ${adminRole.id})\n`);
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "admin"...');
        let adminUser = await User.findOne({ where: { login: 'admin' } });

        if (!adminUser) {
            console.log('üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "admin" –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ...');
            
            // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å (–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
            const defaultPassword = 'admin123';
            console.log(`‚ÑπÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${defaultPassword}`);
            console.log('‚ö†Ô∏è  –í–ê–ñ–ù–û: –°–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞!\n');

            adminUser = await User.create({
                login: 'admin',
                password: defaultPassword, // –ë—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ —Ö—É–∫ beforeSave
                roleId: adminRole.id
            });

            console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "admin" —Å–æ–∑–¥–∞–Ω (ID: ${adminUser.id})`);
            console.log(`‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å: "${adminRole.name}"\n`);
        } else {
            console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "admin" –Ω–∞–π–¥–µ–Ω (ID: ${adminUser.id})`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if (adminUser.roleId !== adminRole.id) {
                console.log('üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "admin"...');
                await adminUser.update({ roleId: adminRole.id });
                console.log(`‚úÖ –†–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"\n`);
            } else {
                console.log(`‚úÖ –†–æ–ª—å —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞: "${adminRole.name}"\n`);
            }
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        const userWithRole = await User.findOne({
            where: { login: 'admin' },
            include: [{
                model: Role,
                as: 'roleData'
            }]
        });

        if (userWithRole && userWithRole.roleData) {
            console.log('‚úÖ –ü—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
            console.log(`   - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ${userWithRole.roleData.isAdmin ? '–î–∞' : '–ù–µ—Ç'}`);
            console.log(`   - –ü—Ä–æ—Å–º–æ—Ç—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${userWithRole.roleData.canViewMaterials ? '–î–∞' : '–ù–µ—Ç'}`);
            console.log(`   - –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${userWithRole.roleData.canCreateMaterials ? '–î–∞' : '–ù–µ—Ç'}`);
            console.log(`   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏: ${userWithRole.roleData.canViewUsers ? '–î–∞' : '–ù–µ—Ç'}`);
            console.log(`   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏: ${userWithRole.roleData.canManageRoles ? '–î–∞' : '–ù–µ—Ç'}`);
        }

        console.log('\n========================================');
        console.log('‚úÖ –ì–û–¢–û–í–û!');
        console.log('========================================\n');

        console.log('üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≤—Ö–æ–¥–∞:');
        console.log(`   –õ–æ–≥–∏–Ω: admin`);
        if (!adminUser.changed('password')) {
            console.log(`   –ü–∞—Ä–æ–ª—å: (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π)`);
        } else {
            console.log(`   –ü–∞—Ä–æ–ª—å: admin123`);
            console.log(`   ‚ö†Ô∏è  –°–ú–ï–ù–ò–¢–ï –ü–ê–†–û–õ–¨ –ü–û–°–õ–ï –ü–ï–†–í–û–ì–û –í–•–û–î–ê!`);
        }
        console.log('');

    } catch (error) {
        console.error('\n‚ùå –û–®–ò–ë–ö–ê:');
        console.error(error);
        console.error('\n–°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack);
        process.exit(1);
    } finally {
        await sequelize.close();
        console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.\n');
        process.exit(0);
    }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createAdminWithRole();

