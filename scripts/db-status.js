/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node scripts/db-status.js
 */

require('dotenv').config();
const { sequelize, User, Category, Material } = require('../models');

const checkStatus = async () => {
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL...');
        await sequelize.authenticate();
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ\n');

        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
        console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏:');
        console.log(`   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${sequelize.config.database}`);
        console.log(`   –•–æ—Å—Ç: ${sequelize.config.host}:${sequelize.config.port}`);
        console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${sequelize.config.username}\n`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∏ —Å—á–∏—Ç–∞–µ–º –∑–∞–ø–∏—Å–∏
        console.log('üìã –°—Ç–∞—Ç—É—Å —Ç–∞–±–ª–∏—Ü:\n');

        try {
            const userCount = await User.count();
            const adminCount = await User.count({ where: { role: 'admin' } });
            const clientCount = await User.count({ where: { role: 'client' } });
            console.log(`   ‚úÖ users (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏):`);
            console.log(`      –í—Å–µ–≥–æ: ${userCount}`);
            console.log(`      –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${adminCount}`);
            console.log(`      –ö–ª–∏–µ–Ω—Ç–æ–≤: ${clientCount}`);
        } catch (error) {
            console.log(`   ‚ùå users - —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        }

        try {
            const categoryCount = await Category.count();
            const activeCount = await Category.count({ where: { isActive: true } });
            console.log(`\n   ‚úÖ categories (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏):`);
            console.log(`      –í—Å–µ–≥–æ: ${categoryCount}`);
            console.log(`      –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${activeCount}`);
        } catch (error) {
            console.log(`\n   ‚ùå categories - —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        }

        try {
            const materialCount = await Material.count();
            const activeCount = await Material.count({ where: { isActive: true } });
            const videoCount = await Material.count({ where: { fileType: 'video' } });
            const documentCount = await Material.count({ where: { fileType: 'document' } });
            const imageCount = await Material.count({ where: { fileType: 'image' } });
            console.log(`\n   ‚úÖ materials (–º–∞—Ç–µ—Ä–∏–∞–ª—ã):`);
            console.log(`      –í—Å–µ–≥–æ: ${materialCount}`);
            console.log(`      –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${activeCount}`);
            console.log(`      –í–∏–¥–µ–æ: ${videoCount}`);
            console.log(`      –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${documentCount}`);
            console.log(`      –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${imageCount}`);
        } catch (error) {
            console.log(`\n   ‚ùå materials - —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        }

        console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n');

        process.exit(0);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error.message);
        console.error('\nüìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error);
        console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('   - PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω');
        console.log('   - –ù–µ–≤–µ—Ä–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ .env');
        console.log('   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ–∑–¥–∞–Ω–∞\n');
        process.exit(1);
    }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkStatus();
