// scripts/final_migration.js
// –§–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ö–µ–º—É, –ø–æ—Ç–æ–º –¥–∞–Ω–Ω—ã–µ.

const { sequelize, User, Role } = require('../models');
const { DataTypes, QueryTypes } = require('sequelize');

async function runFinalMigration() {
    const queryInterface = sequelize.getQueryInterface();

    try {
        console.log('--- –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ ---');

        console.log('üîÑ 1/6: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        await sequelize.authenticate();
        console.log('‚úÖ 1/6: –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');

        // --- –®–∞–≥ 2: –ú–∞—Å—Å–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ --- 
        console.log('üîÑ 2/6: –í—Ä–µ–º–µ–Ω–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ User –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
        // –í—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–∑—Ä–µ—à–∞–µ–º roleId –±—ã—Ç—å NULL, —á—Ç–æ–±—ã sync –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
        User.rawAttributes.roleId.allowNull = true;

        console.log('üîÑ 2/6: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫...');
        await sequelize.sync({ alter: true });
        console.log('‚úÖ 2/6: –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.');

        // --- –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π --- 
        console.log('üîÑ 3/6: –°–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –∏ "–ö–ª–∏–µ–Ω—Ç"...');
        const adminPermissions = {
            name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            description: '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã',
            isAdmin: true, canViewMaterials: true, canDownloadMaterials: true, canCreateMaterials: true,
            canEditMaterials: true, canDeleteMaterials: true, canCreateCategories: true, canEditCategories: true,
            canDeleteCategories: true, canManageAllCategories: true, categoryAccessType: 'all', canViewUsers: true,
            canCreateUsers: true, canEditUsers: true, canDeleteUsers: true, canViewLogs: true, canManageRoles: true
        };
        const [adminRole] = await Role.findOrCreate({ where: { name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' }, defaults: adminPermissions });
        await adminRole.update(adminPermissions, { timestamps: false });

        const clientPermissions = {
            name: '–ö–ª–∏–µ–Ω—Ç', description: '–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
            isAdmin: false, canViewMaterials: true, canDownloadMaterials: true,
        };
        const [clientRole] = await Role.findOrCreate({ where: { name: '–ö–ª–∏–µ–Ω—Ç' }, defaults: clientPermissions });
        console.log('‚úÖ 3/6: –†–æ–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã.');

        // --- –®–∞–≥ 4: –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é --- 
        console.log('üîÑ 4/6: –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —Ä–æ–ª–∏ "–ö–ª–∏–µ–Ω—Ç" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–µ–∑ —Ä–æ–ª–∏...');
        // –¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ –≤—Å–µ –∫–æ–ª–æ–Ω–∫–∏ –Ω–∞ –º–µ—Å—Ç–µ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π User.update
        const [updatedCount] = await User.update({ roleId: clientRole.id }, {
            where: { roleId: null },
            timestamps: false
        });

        if (updatedCount > 0) {
            console.log(`‚úÖ 4/6: –†–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ ${updatedCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.`);
        } else {
            console.log('‚úÖ 4/6: –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ –∏–º–µ—é—Ç —Ä–æ–ª–∏.');
        }

        // --- –®–∞–≥ 5: –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ---
        console.log('üîÑ 5/6: –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "admin"...');
        const adminUser = await User.findOne({ where: { login: 'admin' } });
        if (adminUser) {
            await adminUser.update({ roleId: adminRole.id }, { timestamps: false });
            console.log(`‚úÖ 5/6: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "admin" —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä".`);
        } else {
            console.warn('‚ö†Ô∏è 5/6: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "admin" –Ω–µ –Ω–∞–π–¥–µ–Ω. –≠—Ç–æ—Ç —à–∞–≥ –ø—Ä–æ–ø—É—â–µ–Ω.');
        }

        // --- –®–∞–≥ 6: –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è NOT NULL --- 
        console.log('üîÑ 6/6: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è NOT NULL –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ "role_id"...');
        await queryInterface.changeColumn('users', 'role_id', {
            type: DataTypes.INTEGER,
            allowNull: false
        });
        console.log('‚úÖ 6/6: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ NOT NULL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.');

        console.log('\nüéâ --- –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ---');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
        process.exit(1);
    } finally {
        if (sequelize) {
            await sequelize.close();
            console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.');
        }
        process.exit(0);
    }
}

runFinalMigration();
