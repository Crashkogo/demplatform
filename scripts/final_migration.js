// scripts/final_migration.js
// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –±–µ–∑–±–æ–ª–µ–∑–Ω–µ–Ω–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ —Å—Ö–µ–º—ã –ë–î.

const { sequelize, User, Role, DataTypes } = require('../models');

async function runFinalMigration() {
    const queryInterface = sequelize.getQueryInterface();

    try {
        console.log('--- –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ ---');

        console.log('üîÑ 1/7: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        await sequelize.authenticate();
        console.log('‚úÖ 1/7: –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');

        // --- –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π ---
        console.log('üîÑ 2/7: –°–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –∏ "–ö–ª–∏–µ–Ω—Ç"...');
        const adminPermissions = {
            name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            description: '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã',
            isAdmin: true,
            canViewMaterials: true,
            canDownloadMaterials: true,
            canCreateMaterials: true,
            canEditMaterials: true,
            canDeleteMaterials: true,
            canCreateCategories: true,
            canEditCategories: true,
            canDeleteCategories: true,
            canManageAllCategories: true,
            categoryAccessType: 'all',
            canViewUsers: true,
            canCreateUsers: true,
            canEditUsers: true,
            canDeleteUsers: true,
            canViewLogs: true,
            canManageRoles: true
        };
        const [adminRole] = await Role.findOrCreate({ where: { name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' }, defaults: adminPermissions });
        // –í—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–ª—É—á–∞–π –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ
        await adminRole.update(adminPermissions);

        const clientPermissions = {
            name: '–ö–ª–∏–µ–Ω—Ç',
            description: '–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
            isAdmin: false,
            canViewMaterials: true,
            canDownloadMaterials: true,
        };
        const [clientRole] = await Role.findOrCreate({ where: { name: '–ö–ª–∏–µ–Ω—Ç' }, defaults: clientPermissions });
        console.log('‚úÖ 2/7: –†–æ–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã.');

        // --- –®–∞–≥ 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ role_id (–µ—Å–ª–∏ –µ–µ –Ω–µ—Ç) ---
        console.log('üîÑ 3/7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ "role_id" –≤ —Ç–∞–±–ª–∏—Ü—É "users"...');
        const tableDescription = await queryInterface.describeTable('users');
        if (!tableDescription.role_id) {
            await queryInterface.addColumn('users', 'role_id', {
                type: DataTypes.INTEGER,
                references: {
                    model: 'roles', // –ò–º—è —Ç–∞–±–ª–∏—Ü—ã
                    key: 'id',
                },
                onUpdate: 'CASCADE',
                onDelete: 'SET NULL',
                allowNull: true // –í–†–ï–ú–ï–ù–ù–û —Ä–∞–∑—Ä–µ—à–∞–µ–º NULL
            });
            console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ "role_id" –¥–æ–±–∞–≤–ª–µ–Ω–∞.');
        } else {
            console.log('‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ "role_id" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.');
        }

        // --- –®–∞–≥ 4: –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º ---
        console.log('üîÑ 4/7: –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —Ä–æ–ª–∏ "–ö–ª–∏–µ–Ω—Ç" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–µ–∑ —Ä–æ–ª–∏...');
        const [updatedCount] = await User.update({ roleId: clientRole.id }, {
            where: { roleId: null }
        });
        if (updatedCount > 0) {
            console.log(`‚úÖ 4/7: –†–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ ${updatedCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.`);
        } else {
            console.log('‚úÖ 4/7: –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ –∏–º–µ—é—Ç —Ä–æ–ª–∏.');
        }
        

        // --- –®–∞–≥ 5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è NOT NULL ---
        console.log('üîÑ 5/7: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è NOT NULL –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ "role_id"...');
        await queryInterface.changeColumn('users', 'role_id', {
            type: DataTypes.INTEGER,
            allowNull: false
        });
        console.log('‚úÖ 5/7: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ NOT NULL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.');

        // --- –®–∞–≥ 6: –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ---
        console.log('üîÑ 6/7: –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "admin"...');
        const adminUser = await User.findOne({ where: { login: 'admin' } });
        if (adminUser) {
            await adminUser.update({ roleId: adminRole.id });
            console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "admin" —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä".`);
        } else {
            console.warn('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "admin" –Ω–µ –Ω–∞–π–¥–µ–Ω. –≠—Ç–æ—Ç —à–∞–≥ –ø—Ä–æ–ø—É—â–µ–Ω.');
        }

        // --- –®–∞–≥ 7: –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ---
        console.log('üîÑ 7/7: –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π...');
        await sequelize.sync({ alter: true });
        console.log('‚úÖ 7/7: –í—Å–µ –º–æ–¥–µ–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.');


        console.log('\nüéâ --- –ò—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ---');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
        process.exit(1);
    } finally {
        if (sequelize) {
            await sequelize.close();
            console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.');
        }
        process.exit(0);
    }
}

runFinalMigration();
