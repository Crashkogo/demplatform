// scripts/migrate-add-roles.js
require('dotenv').config();
const { sequelize, Role, User } = require('../models');

async function migrateRoles() {
    console.log('üöÄ –ù–∞—á–∞–ª–æ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã —Ä–æ–ª–µ–π...\n');

    try {
        // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        const transaction = await sequelize.transaction();

        try {
            // === –®–ê–ì 1: –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É roles ===
            console.log('üìã –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã roles...');
            
            await sequelize.query(`
                CREATE TABLE IF NOT EXISTS roles (
                    id SERIAL PRIMARY KEY,
                    name VARCHAR(100) NOT NULL UNIQUE,
                    description TEXT,
                    is_admin BOOLEAN DEFAULT FALSE,
                    
                    -- –ü—Ä–∞–≤–∞ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
                    can_view_materials BOOLEAN DEFAULT TRUE,
                    can_download_materials BOOLEAN DEFAULT FALSE,
                    can_create_materials BOOLEAN DEFAULT FALSE,
                    can_edit_materials BOOLEAN DEFAULT FALSE,
                    can_delete_materials BOOLEAN DEFAULT FALSE,
                    
                    -- –ü—Ä–∞–≤–∞ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    can_create_categories BOOLEAN DEFAULT FALSE,
                    can_edit_categories BOOLEAN DEFAULT FALSE,
                    can_delete_categories BOOLEAN DEFAULT FALSE,
                    can_manage_all_categories BOOLEAN DEFAULT FALSE,
                    category_access_type VARCHAR(20) DEFAULT 'selected',
                    
                    -- –ü—Ä–∞–≤–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    can_view_users BOOLEAN DEFAULT FALSE,
                    can_create_users BOOLEAN DEFAULT FALSE,
                    can_edit_users BOOLEAN DEFAULT FALSE,
                    can_delete_users BOOLEAN DEFAULT FALSE,
                    
                    -- –ü—Ä–∞–≤–∞ –Ω–∞ –ª–æ–≥–∏
                    can_view_logs BOOLEAN DEFAULT FALSE,
                    
                    -- –ü—Ä–∞–≤–∞ –Ω–∞ —Ä–æ–ª–∏
                    can_manage_roles BOOLEAN DEFAULT FALSE,
                    
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                );
            `, { transaction });
            
            console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ roles —Å–æ–∑–¥–∞–Ω–∞\n');

            // === –®–ê–ì 2: –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É role_categories ===
            console.log('üìã –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã role_categories...');
            
            await sequelize.query(`
                CREATE TABLE IF NOT EXISTS role_categories (
                    id SERIAL PRIMARY KEY,
                    role_id INTEGER NOT NULL REFERENCES roles(id) ON DELETE CASCADE,
                    category_id INTEGER NOT NULL REFERENCES categories(id) ON DELETE CASCADE,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    UNIQUE(role_id, category_id)
                );
            `, { transaction });
            
            console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ role_categories —Å–æ–∑–¥–∞–Ω–∞\n');

            // === –®–ê–ì 3: –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ role_id –≤ —Ç–∞–±–ª–∏—Ü—É users ===
            console.log('üìã –®–∞–≥ 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è role_id –≤ —Ç–∞–±–ª–∏—Ü—É users...');
            
            try {
                await sequelize.query(`
                    ALTER TABLE users 
                    ADD COLUMN IF NOT EXISTS role_id INTEGER REFERENCES roles(id) ON DELETE SET NULL;
                `, { transaction });
                
                console.log('‚úÖ –ü–æ–ª–µ role_id –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É users\n');
            } catch (error) {
                if (error.message.includes('already exists')) {
                    console.log('‚ÑπÔ∏è  –ü–æ–ª–µ role_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n');
                } else {
                    throw error;
                }
            }

            // === –®–ê–ì 4: –°–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ===
            console.log('üìã –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...');
            
            const defaultRoles = [
                {
                    name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                    description: '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã',
                    isAdmin: true,
                    canViewMaterials: true,
                    canDownloadMaterials: true,
                    canCreateMaterials: true,
                    canEditMaterials: true,
                    canDeleteMaterials: true,
                    canCreateCategories: true,
                    canEditCategories: true,
                    canDeleteCategories: true,
                    canManageAllCategories: true,
                    categoryAccessType: 'all',
                    canViewUsers: true,
                    canCreateUsers: true,
                    canEditUsers: true,
                    canDeleteUsers: true,
                    canViewLogs: true,
                    canManageRoles: true
                },
                {
                    name: '–ö–ª–∏–µ–Ω—Ç (—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä)',
                    description: '–ú–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö',
                    isAdmin: false,
                    canViewMaterials: true,
                    canDownloadMaterials: false,
                    canCreateMaterials: false,
                    canEditMaterials: false,
                    canDeleteMaterials: false,
                    canCreateCategories: false,
                    canEditCategories: false,
                    canDeleteCategories: false,
                    canManageAllCategories: false,
                    categoryAccessType: 'selected',
                    canViewUsers: false,
                    canCreateUsers: false,
                    canEditUsers: false,
                    canDeleteUsers: false,
                    canViewLogs: false,
                    canManageRoles: false
                },
                {
                    name: '–ö–ª–∏–µ–Ω—Ç (–ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ)',
                    description: '–ú–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏ —Å–∫–∞—á–∏–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
                    isAdmin: false,
                    canViewMaterials: true,
                    canDownloadMaterials: true,
                    canCreateMaterials: false,
                    canEditMaterials: false,
                    canDeleteMaterials: false,
                    canCreateCategories: false,
                    canEditCategories: false,
                    canDeleteCategories: false,
                    canManageAllCategories: false,
                    categoryAccessType: 'selected',
                    canViewUsers: false,
                    canCreateUsers: false,
                    canEditUsers: false,
                    canDeleteUsers: false,
                    canViewLogs: false,
                    canManageRoles: false
                },
                {
                    name: '–†–µ–¥–∞–∫—Ç–æ—Ä',
                    description: '–ú–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
                    isAdmin: false,
                    canViewMaterials: true,
                    canDownloadMaterials: true,
                    canCreateMaterials: true,
                    canEditMaterials: true,
                    canDeleteMaterials: false,
                    canCreateCategories: false,
                    canEditCategories: false,
                    canDeleteCategories: false,
                    canManageAllCategories: false,
                    categoryAccessType: 'selected',
                    canViewUsers: false,
                    canCreateUsers: false,
                    canEditUsers: false,
                    canDeleteUsers: false,
                    canViewLogs: false,
                    canManageRoles: false
                },
                {
                    name: '–ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                    description: '–ü–æ–ª–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏',
                    isAdmin: false,
                    canViewMaterials: true,
                    canDownloadMaterials: true,
                    canCreateMaterials: true,
                    canEditMaterials: true,
                    canDeleteMaterials: true,
                    canCreateCategories: true,
                    canEditCategories: true,
                    canDeleteCategories: true,
                    canManageAllCategories: false,
                    categoryAccessType: 'selected',
                    canViewUsers: false,
                    canCreateUsers: false,
                    canEditUsers: false,
                    canDeleteUsers: false,
                    canViewLogs: false,
                    canManageRoles: false
                },
                {
                    name: 'HR –º–µ–Ω–µ–¥–∂–µ—Ä',
                    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º',
                    isAdmin: false,
                    canViewMaterials: false,
                    canDownloadMaterials: false,
                    canCreateMaterials: false,
                    canEditMaterials: false,
                    canDeleteMaterials: false,
                    canCreateCategories: false,
                    canEditCategories: false,
                    canDeleteCategories: false,
                    canManageAllCategories: false,
                    categoryAccessType: 'selected',
                    canViewUsers: true,
                    canCreateUsers: true,
                    canEditUsers: true,
                    canDeleteUsers: false, // –ë–µ–∑ –ø—Ä–∞–≤–∞ —É–¥–∞–ª–µ–Ω–∏—è
                    canViewLogs: false,
                    canManageRoles: false
                }
            ];

            for (const roleData of defaultRoles) {
                const [role, created] = await Role.findOrCreate({
                    where: { name: roleData.name },
                    defaults: roleData,
                    transaction
                });
                
                if (created) {
                    console.log(`   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å: ${role.name}`);
                } else {
                    console.log(`   ‚ÑπÔ∏è  –†–æ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${role.name}`);
                }
            }
            
            console.log('');

            // === –®–ê–ì 5: –ú–∏–≥—Ä–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===
            console.log('üìã –®–∞–≥ 5: –ú–∏–≥—Ä–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
            
            // –ù–∞—Ö–æ–¥–∏–º —Ä–æ–ª–∏
            const adminRole = await Role.findOne({ 
                where: { name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' },
                transaction 
            });
            
            const clientRole = await Role.findOne({ 
                where: { name: '–ö–ª–∏–µ–Ω—Ç (–ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ)' },
                transaction 
            });

            // –ú–∏–≥—Ä–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            const adminUsers = await User.findAll({ 
                where: { role: 'admin', roleId: null },
                transaction 
            });
            
            for (const user of adminUsers) {
                await user.update({ roleId: adminRole.id }, { transaction });
                console.log(`   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.login} –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ —Ä–æ–ª—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"`);
            }

            // –ú–∏–≥—Ä–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
            const clientUsers = await User.findAll({ 
                where: { role: 'client', roleId: null },
                transaction 
            });
            
            for (const user of clientUsers) {
                await user.update({ roleId: clientRole.id }, { transaction });
                console.log(`   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.login} –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ —Ä–æ–ª—å "–ö–ª–∏–µ–Ω—Ç (–ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ)"`);
            }
            
            console.log('');

            // === –®–ê–ì 6: –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã ===
            console.log('üìã –®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...');
            
            await sequelize.query(`
                CREATE INDEX IF NOT EXISTS idx_users_role_id ON users(role_id);
                CREATE INDEX IF NOT EXISTS idx_role_categories_role_id ON role_categories(role_id);
                CREATE INDEX IF NOT EXISTS idx_role_categories_category_id ON role_categories(category_id);
                CREATE INDEX IF NOT EXISTS idx_roles_is_admin ON roles(is_admin);
            `, { transaction });
            
            console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã\n');

            // –ö–æ–º–º–∏—Ç–∏–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            await transaction.commit();

            console.log('‚ú® –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n');
            console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
            console.log(`   ‚Ä¢ –†–æ–ª–µ–π —Å–æ–∑–¥–∞–Ω–æ: ${defaultRoles.length}`);
            console.log(`   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${adminUsers.length + clientUsers.length}`);
            console.log('');
            console.log('‚ö†Ô∏è  –í–ê–ñ–ù–û:');
            console.log('   ‚Ä¢ –°—Ç–∞—Ä–æ–µ –ø–æ–ª–µ "role" —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏');
            console.log('   ‚Ä¢ –¢–µ–ø–µ—Ä—å –≤—Å–µ –Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å roleId');
            console.log('   ‚Ä¢ –í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª–µ "role" –ø–æ–∑–∂–µ –∫–æ–º–∞–Ω–¥–æ–π:');
            console.log('     ALTER TABLE users DROP COLUMN role;\n');

        } catch (error) {
            // –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
            await transaction.rollback();
            throw error;
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
        console.error('–î–µ—Ç–∞–ª–∏:', error.message);
        process.exit(1);
    } finally {
        await sequelize.close();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
migrateRoles()
    .then(() => {
        console.log('üëã –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä.');
        process.exit(0);
    })
    .catch((error) => {
        console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
        process.exit(1);
    });