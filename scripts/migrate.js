/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–æ–¥–µ–ª–µ–π Sequelize
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node scripts/migrate.js - —Å–æ–∑–¥–∞–µ—Ç/–æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—ã
 * node scripts/migrate.js --force - –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã (–£–î–ê–õ–Ø–ï–¢ –í–°–ï –î–ê–ù–ù–´–ï!)
 */

require('dotenv').config();
const { sequelize, User, Category, Material } = require('../models');

const migrate = async () => {
    try {
        console.log('üöÄ –ù–∞—á–∞–ª–æ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        console.log('üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL...');
        await sequelize.authenticate();
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ\n');

        // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        const args = process.argv.slice(2);
        const force = args.includes('--force');
        const alter = args.includes('--alter') || !force;

        if (force) {
            console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –†–µ–∂–∏–º --force –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!');
            console.log('‚ö†Ô∏è  –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã!\n');

            // –î–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Ä–µ–º—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            await new Promise(resolve => setTimeout(resolve, 2000));
        }

        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...');
        console.log(`   –†–µ–∂–∏–º: ${force ? 'FORCE (–ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ)' : alter ? 'ALTER (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)' : 'CREATE (—Å–æ–∑–¥–∞–Ω–∏–µ)'}\n`);

        await sequelize.sync({ force, alter: !force && alter });

        console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\n');

        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
        console.log('üìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:');
        console.log('   - users (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)');
        console.log('   - categories (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏)');
        console.log('   - materials (–º–∞—Ç–µ—Ä–∏–∞–ª—ã)\n');

        console.log('üí° –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –∑–∞–ø—É—Å—Ç–∏—Ç–µ seed —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
        console.log('   npm run seed\n');

        process.exit(0);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
        console.error('\nüìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error);
        process.exit(1);
    }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
migrate();
